{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personsApiCommands","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","PersonForm","addNameAndNumber","newName","newNumber","setNewName","setNewNumber","onSubmit","type","value","onChange","event","target","Person","props","person","name","number","onClick","removePerson","Persons","className","contactsToShow","map","Filter","currentFilter","setNewFilter","Notification","message","isError","App","useState","persons","setPersons","notificationMessage","setNotificationMessage","setIsError","useEffect","document","title","personService","initialPersonsData","showToast","toastDurationInSec","setTimeout","filter","length","toLowerCase","indexOf","preventDefault","existingPerson","find","trim","newContactInfoObj","updatedPersonsData","concat","catch","error","JSON","stringify","errorMessage","console","log","window","confirm","returnedPersonData","personName","status","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9dfbd063.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n};\n\nconst personsApiCommands = {\n  getAll,\n  create,\n  update,\n  remove,\n};\n\nexport default personsApiCommands;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport './index.css';\n\nconst PersonForm = ({\n  addNameAndNumber,\n  newName,\n  newNumber,\n  setNewName,\n  setNewNumber,\n}) => {\n  return (\n    <form onSubmit={addNameAndNumber}>\n      <h2> Add a new contact info: </h2>\n      <div>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            value={newName}\n            onChange={(event) => setNewName(event.target.value)}\n          />\n        </label>\n        <br />\n        <label>\n          Number:\n          <input\n            type=\"tel\"\n            value={newNumber}\n            onChange={(event) => setNewNumber(event.target.value)}\n          />\n        </label>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Person = (props) => {\n  return (\n    <li>\n      {\" \"}\n      <strong>{props.person.name}</strong> {props.person.number}{\" \"}\n      <button\n        type=\"button\"\n        onClick={() => {\n          props.removePerson(props.person.id, props.person.name);\n        }}\n      >\n        delete\n      </button>\n    </li>\n  );\n};\n\nconst Persons = (props) => {\n  return (\n    <ul className='persons__container'>\n      {props.contactsToShow.map((person) => (\n        <Person\n          key={person.name + person.id}\n          person={person}\n          removePerson={props.removePerson}\n        />\n      ))}\n    </ul>\n  );\n};\n\nconst Filter = (props) => {\n  return (\n    <p>\n      <label>\n        Only show contacts containing {\" \"}\n        <input\n          type=\"text\"\n          value={props.currentFilter}\n          onChange={(event) => props.setNewFilter(event.target.value)}\n        />\n      </label>\n    </p>\n  );\n};\n\nconst Notification = ({ message, isError }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={ ( isError ? 'message__container message__container--error' : 'message__container' ) }>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    // Add enough default data for testing. External fetch should overwrite these.\n    // { name: \"Arto Hellas\", number: \"040-123456\" },\n    { },\n  ]);\n  const [currentFilter, setNewFilter] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [isError, setIsError] = useState(true);\n\n  useEffect(() => {\n    document.title = 'Phonebook, part3';\n    const handlePersonsData = (initialPersonsData) => {\n      setPersons(initialPersonsData);\n    };\n\n    const promiseFromPersons = personService.getAll();\n    promiseFromPersons.then(handlePersonsData);\n  }, []);\n\n  const showToast = (notificationMessage, isError = false, toastDurationInSec = 3) => {\n    setNotificationMessage(notificationMessage);\n    setIsError(isError)\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, (toastDurationInSec * 1000))\n  }\n\n  const removePerson = (id, personName) => {\n    if (!window.confirm(`Delete ${personName}`)) return false;\n\n    personService\n      .remove(id)\n      .then((response) => {\n        if (response.status === 200) {\n          showToast(`Successfully removed the person with ID ${id}`)\n        }\n      })\n      .catch((error) => {\n        showToast(`Having problems with removal, is the ID: ${id} deleted already?`, true)\n      });\n    // Remove missing ID also from Reacts' state.\n    setPersons(persons.filter((person) => person.id !== id));\n  };\n\n  const addNameAndNumber = (event) => {\n    event.preventDefault();\n    const existingPerson = persons.find((person) => {\n      // Check if exists, case insensitively & ignore lead/trail whitespace.\n      return person.name.trim().toLowerCase() === newName.trim().toLowerCase();\n    });\n\n    const newContactInfoObj = {\n      name: newName,\n      number: newNumber,\n    };\n\n    if (typeof existingPerson === \"object\" && existingPerson !== null) {\n      // If user already exists, check if we want to update.\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        personService\n          .update(existingPerson.id, newContactInfoObj)\n          .then((returnedPersonData) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === existingPerson.id ? returnedPersonData : person\n              )\n            );\n            showToast(`Successfully updated ${returnedPersonData.name}`)\n          })\n          .catch((error) => {\n            showToast(`Could not update, ${newName} is already missing from the server.`, true, 5)\n          });\n      }\n      return;\n    }\n    personService.create(newContactInfoObj)\n    .then((updatedPersonsData) => {\n      setPersons(persons.concat(updatedPersonsData));\n      showToast(`Successfully added ${updatedPersonsData.name}`)\n      setNewName(\"\");\n      setNewNumber(\"\");\n    })\n    .catch((error) => {\n      showToast(`Could not add name and number to the server due following error: \n      ${JSON.stringify(error.response.data.errorMessage)}`, true, 7)\n      console.log('error while creating:', error)\n    });\n    return;\n  };\n\n  // Create filtered list with case insensitive matching.\n  const contactsToShow = persons.filter((person) => {\n    if (currentFilter.length === 0) return true;\n    const personLowerCase = person.name.toLowerCase();\n    return personLowerCase.indexOf(currentFilter.toLowerCase()) > -1;\n  });\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage} isError={isError}/>\n      <PersonForm\n        addNameAndNumber={addNameAndNumber}\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n      />\n\n      <h2>List of contacts in phonebook</h2>\n\n      <Filter currentFilter={currentFilter} setNewFilter={setNewFilter} />\n\n      <Persons \n        contactsToShow={contactsToShow} \n        removePerson={removePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}